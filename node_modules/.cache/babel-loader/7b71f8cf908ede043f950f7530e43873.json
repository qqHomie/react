{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport clothesReducer from \"./ClothesReducer/clothesReducer\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from \"history\";\nimport thunkMiddleware from 'redux-thunk';\nconst composeEnhancers = compose;\nexport const history = createBrowserHistory();\nconst rootReducer = combineReducers({\n  clothes: clothesReducer,\n  router: connectRouter(history)\n});\nconst middleware = [thunkMiddleware, routerMiddleware(history)];\n\nconst saveToLocalStorage = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (e) {\n    console.log('Error save state');\n  }\n};\n\nconst loadFromLocalStorage = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (e) {\n    return undefined;\n  }\n};\n\nconst enhancers = composeEnhancers(applyMiddleware(...middleware));\nconst persistedState = loadFromLocalStorage();\nconst store = createStore(rootReducer, persistedState, enhancers);\nstore.subscribe(() => {\n  saveToLocalStorage({\n    clothes: { ...store.getState()\n    }\n  });\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/TUF F15/Documents/Study/3-course/js/cloth-shop/src/Reducers/configuration.js"],"names":["applyMiddleware","combineReducers","compose","createStore","clothesReducer","connectRouter","routerMiddleware","createBrowserHistory","thunkMiddleware","composeEnhancers","history","rootReducer","clothes","router","middleware","saveToLocalStorage","state","serializedState","JSON","stringify","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","enhancers","persistedState","store","subscribe","getState"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,WAAnD,QAAqE,OAArE;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAAQC,aAAR,EAAuBC,gBAAvB,QAA8C,wBAA9C;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AAEA,MAAMC,gBAAgB,GAAGP,OAAzB;AACA,OAAO,MAAMQ,OAAO,GAAGH,oBAAoB,EAApC;AAEP,MAAMI,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,OAAO,EAAER,cADuB;AAEhCS,EAAAA,MAAM,EAAER,aAAa,CAACK,OAAD;AAFW,CAAD,CAAnC;AAKA,MAAMI,UAAU,GAAG,CACfN,eADe,EAEfF,gBAAgB,CAACI,OAAD,CAFD,CAAnB;;AAKA,MAAMK,kBAAkB,GAAGC,KAAK,IAAI;AAChC,MAAI;AACA,UAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB;AACAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BJ,eAA9B;AACH,GAHD,CAGE,OAAOK,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ,CAPD;;AASA,MAAMC,oBAAoB,GAAG,MAAM;AAC/B,MAAI;AACA,UAAMR,eAAe,GAAGG,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAIT,eAAe,KAAK,IAAxB,EAA8B;AAC1B,aAAOU,SAAP;AACH;;AAED,WAAOT,IAAI,CAACU,KAAL,CAAWX,eAAX,CAAP;AACH,GAPD,CAOE,OAAOK,CAAP,EAAU;AACR,WAAOK,SAAP;AACH;AACJ,CAXD;;AAYA,MAAME,SAAS,GAAGpB,gBAAgB,CAACT,eAAe,CAAC,GAAGc,UAAJ,CAAhB,CAAlC;AACA,MAAMgB,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,MAAMM,KAAK,GAAG5B,WAAW,CAACQ,WAAD,EAAcmB,cAAd,EAA8BD,SAA9B,CAAzB;AAEAE,KAAK,CAACC,SAAN,CAAgB,MAAM;AAClBjB,EAAAA,kBAAkB,CAAC;AACfH,IAAAA,OAAO,EAAE,EACL,GAAGmB,KAAK,CAACE,QAAN;AADE;AADM,GAAD,CAAlB;AAKH,CAND;AAQA,eAAeF,KAAf","sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport clothesReducer from \"./ClothesReducer/clothesReducer\";\r\nimport {connectRouter, routerMiddleware} from 'connected-react-router';\r\nimport {createBrowserHistory} from \"history\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst composeEnhancers = compose;\r\nexport const history = createBrowserHistory();\r\n\r\nconst rootReducer = combineReducers({\r\n    clothes: clothesReducer,\r\n    router: connectRouter(history)\r\n});\r\n\r\nconst middleware = [\r\n    thunkMiddleware,\r\n    routerMiddleware(history)\r\n];\r\n\r\nconst saveToLocalStorage = state => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch (e) {\r\n        console.log('Error save state');\r\n    }\r\n};\r\n\r\nconst loadFromLocalStorage = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem('state');\r\n        if (serializedState === null) {\r\n            return undefined;\r\n        }\r\n\r\n        return JSON.parse(serializedState);\r\n    } catch (e) {\r\n        return undefined;\r\n    }\r\n};\r\nconst enhancers = composeEnhancers(applyMiddleware(...middleware));\r\nconst persistedState = loadFromLocalStorage();\r\n\r\nconst store = createStore(rootReducer, persistedState, enhancers);\r\n\r\nstore.subscribe(() => {\r\n    saveToLocalStorage({\r\n        clothes: {\r\n            ...store.getState()\r\n        },\r\n    })\r\n});\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}